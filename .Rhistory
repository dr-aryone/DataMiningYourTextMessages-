pie_chart_for_text_balance_ratio(balance_data[24,])
pie_chart_for_text_balance_ratio(balance_data[21,])
pie_chart_for_text_balance_ratio(balance_data[20,])
pie_chart_for_text_balance_ratio(balance_data[18,])
pie_chart_for_text_balance_ratio(balance_data[1,])
pie_chart_for_text_balance_ratio(balance_data[2,])
pie_chart_for_text_balance_ratio(balance_data[3,])
pie_chart_for_text_balance_ratio(balance_data[8,])
pie_chart_for_text_balance_ratio(balance_data[48,])
pie_chart_for_text_balance_ratio(balance_data[11,])
pie_chart_for_text_balance_ratio(balance_data[48,])
pie_chart_for_text_balance_ratio(balance_data[48,])
text_frequency_by_month(message_data)
text_frequency_by_month(message_data)
?hist
source('~/Dropbox/TextMining/Setup.R')
pie_chart_for_text_balance_ratio(data)
data <- load_balance_data()
data <- load_balance_data(con)
pie_chart_for_text_balance_ratio(data)
text_frequency_by_month(data)
message_data
pie_chart_for_text_balance_ratio(message_data)
pie_chart_for_text_balance_ratio(balance_data)
message_data
View(message_data)
View(balance_data)
text_frequency_by_month(message_data)
pie_chart_for_text_balance_ratio(balance_data)
pie_chart_for_text_balance_ratio(balance_data[,1])
pie_chart_for_text_balance_ratio(balance_data[1,])
pie_chart_for_text_balance_ratio(balance_data[2,])
pie_chart_for_text_balance_ratio(balance_data[7,])
pie_chart_for_text_balance_ratio(balance_data[14,])
pie_chart_for_text_balance_ratio(balance_data[55,])
pie_chart_for_text_balance_ratio(balance_data[33,])
pie_chart_for_text_balance_ratio(balance_data[22,])
pie_chart_for_text_balance_ratio(balance_data[19,])
pie_chart_for_text_balance_ratio(balance_data[18,])
pie_chart_for_text_balance_ratio(balance_data[12,])
pie_chart_for_text_balance_ratio(balance_data[,])
?pie
?pie
?aes
library(ggplot)
library(ggplot2)
?aes
pie_chart_for_text_balance_ratio(balance_data[5,])
pie_chart_for_text_balance_ratio(balance_data[8,])
balance_data$to_me
pie_chart_for_text_balance_ratio(balance_data[46,])
pie_chart_for_text_balance_ratio(balance_data[45,])
pie_chart_for_text_balance_ratio(balance_data[44,])
pie_chart_for_text_balance_ratio(balance_data[43,])
pie_chart_for_text_balance_ratio(balance_data[47,])
pie_chart_for_text_balance_ratio(balance_data[48,])
pie_chart_for_text_balance_ratio(balance_data[43,])
pie_chart_for_text_balance_ratio(balance_data[43,])
View(balance_data)
pie_chart_for_text_balance_ratio(balance_data[8,])
text_frequency_by_month(message_data)
pie_chart_for_text_balance_ratio(balance_data[48,])
pie_chart_for_text_balance_ratio(balance_data[8,])
text_frequency_by_month(message_data)
pie_chart_for_text_balance_ratio(balance_data[48,])
pie_chart_for_text_balance_ratio(balance_data[8,])
source('~/Dropbox/TextMining/Setup.R')
pie_chart_for_text_balance_ratio(balance_data[8,])
head(message_data)
View(message_data)
message_data <- load_message_data(con)
con <- load_db()
message_data <- load_message_data(con)
message_data <- load_message_data(con)
View(message_data)
colnames(message_data)
colnames(message_data)
text_frequency_by_month(message_data)
message_data
message_data$chat_identifier
uniq(message_data$chat_identifier)
unique(massage_data$chat_identifier)
unique(message_data$chat_identifier)
apply(unique(message_data$chat_identifier), function() {})
apply(unique(message_data$chat_identifier), FUN=function() {})
lapply(unique(message_data$chat_identifier), FUN=function() {})
sapply(unique(message_data$chat_identifier), FUN=function() {})
add_to_db <- function(){}
sapply(unique(message_data$chat_identifier), FUN=add_to_db)
add_to_db <- function(data){}
sapply(unique(message_data$chat_identifier), FUN=add_to_db)
con
add_to_db <- function(vect,con){
funct <- function(data){
rs <- dbSendQuery(con, "insert into demographics (number,gender,name) values(" + data + ", NULL, NULL)"
}
sapply(vect, FUN=funct)
}
add_to_db <- function(vect,con){
funct <- function(data){
rs <- dbSendQuery(con, "insert into demographics (number,gender,name) values(" + data + ", NULL, NULL)")
}
sapply(vect, FUN=funct)
}
con
add_to_db(unique(message_data$chat_identifier), con)
"a" + "b" + "c"
concat("a","b")
add_to_db <- function(vect,con){
funct <- function(data){
rs <- dbSendQuery(con, paste("insert into demographics (number,gender,name) values(", data, ", NULL, NULL)"))
}
sapply(vect, FUN=funct)
}
add_to_db(unique(message_data$chat_identifier), con)
add_to_db <- function(vect,con){
funct <- function(data){
puts(paste("insert into demographics (number,gender,name) values(", data, ", NULL, NULL)"))
rs <- dbSendQuery(con, paste("insert into demographics (number,gender,name) values(", data, ", NULL, NULL)"))
}
sapply(vect, FUN=funct)
}
add_to_db(unique(message_data$chat_identifier), con)
add_to_db <- function(vect,con){
funct <- function(data){
print(paste("insert into demographics (number,gender,name) values(", data, ", NULL, NULL)"))
rs <- dbSendQuery(con, paste("insert into demographics (number,gender,name) values(", data, ", NULL, NULL)"))
}
sapply(vect, FUN=funct)
}
add_to_db(unique(message_data$chat_identifier), con)
add_to_db(unique(message_data$chat_identifier), con)
sort(unique(message_data$chat_identifier))
data <- sort(unique(message_data$chat_identifier))
data[data =~ /^\+/]
data[data =~ "^\+"]
data[data =~ "^+"]
data[0]
data[1]
data[1][1]
substring(data, 1, 1)
data[substring(data, 1, 1) == "+"]
numbers <- data[substring(data, 1, 1) == "+"]
add_to_db(unique(numbers, con)
)
add_to_db(unique(numbers, con))
add_to_db(numbers, con)
history()
JOIN demographics d ON c.chat_identifier =  ('+' || d.number);")
JOIN chat c ON j.chat_id = c.ROWID JOIN demographics d ON c.chat_identifier =  ('+' || d.number);")
JOIN chat_message_join j ON j.message_id = m.ROWID JOIN chat c ON j.chat_id = c.ROWID JOIN demographics d ON c.chat_identifier =  ('+' || d.number);")
message m JOIN chat_message_join j ON j.message_id = m.ROWID JOIN chat c ON j.chat_id = c.ROWID JOIN demographics d ON c.chat_identifier =  ('+' || d.number);")
FROM message m JOIN chat_message_join j ON j.message_id = m.ROWID JOIN chat c ON j.chat_id = c.ROWID JOIN demographics d ON c.chat_identifier =  ('+' || d.number);")
rs <- dbSendQuery(con, "SELECT * FROM message m JOIN chat_message_join j ON j.message_id = m.ROWID JOIN chat c ON j.chat_id = c.ROWID JOIN demographics d ON c.chat_identifier =  ('+' || d.number);")
message_data$name
message_data <- load_message_data(con)
con <- load_db()
message_data <- load_message_data(con)
message_data$name
View(message_data)
source('~/.active-rstudio-document')
View(message_data)
message_data$name
source('~/.active-rstudio-document')
a <-
;
con
load_leaders(con)
leaders <- load_leaders(con)
history(leaders)
hist(leaders)
hist(leaders['count(*)'])
leaders['count(*)']
leaders[as.number('count(*)')]
as.num
as.int
leaders[as.integer('count(*)')]
as.integer(leaders['count(*)'])
leaders_count <- sapply(leaders['count(*)'], as.integer)
leaders_count
hist(leaders_count)
hist(leaders_count, col=c('red'))
?hist
hist(leaders_count, breaks=20, col=c('red'))
balance_data <- load_balance_data(con)
View(balance_data)
source('~/Dropbox/TextMining/Setup.R')
balance_data <- load_balance_data(con)
View(balance_data)
pie_chart_for_text_balance_ratio(balance_data)
pie_chart_for_text_balance_ratio(balance_data[1,])
source('~/Dropbox/TextMining/Setup.R')
pie_chart_for_text_balance_ratio(balance_data[1,])
pie_chart_for_text_balance_ratio(balance_data[2,])
pie_chart_for_text_balance_ratio(balance_data[45,])
pie_chart_for_text_balance_ratio(balance_data[47,])
pie_chart_for_text_balance_ratio(balance_data[50,])
pie_chart_for_text_balance_ratio(balance_data[8,])
pie_chart_for_text_balance_ratio(balance_data[14,])
pie_chart_for_text_balance_ratio(balance_data[46,])
pie_chart_for_text_balance_ratio(balance_data[45,])
pie_chart_for_text_balance_ratio(balance_data[44,])
pie_chart_for_text_balance_ratio(balance_data[43,])
pie_chart_for_text_balance_ratio(balance_data[42,])
pie_chart_for_text_balance_ratio(balance_data[41,])
pie_chart_for_text_balance_ratio(balance_data[40,])
pie_chart_for_text_balance_ratio(balance_data[39,])
pie_chart_for_text_balance_ratio(balance_data[38,])
pie_chart_for_text_balance_ratio(balance_data[37,])
source('~/Dropbox/TextMining/Setup.R')
balance_data <- load_balance_data(con)
?pie
source('~/Dropbox/TextMining/Setup.R')
source('~/.active-rstudio-document')
balance_data <- load_balance_data(con)
pie_chart_for_text_balance_ratio(balance_data[39,])
a <- pie_chart_for_text_balance_ratio(balance_data[39,])
a
png('out.png')
a <- pie_chart_for_text_balance_ratio(balance_data[39,])
dev.off()
source('~/.active-rstudio-document')
overall_balance <- load_overall_balance_data(con)
View(overall_balance)
a <- pie_chart_for_text_balance_ratio(overall_balance)
message_data
message_data[message_data$gender = 1]
message_data[message_data$gender < 1]
message_data[message_data$gender == 1]
View(message_data)
message_data[!is.na(message_data$gender)]
message_data[!is.na(message_data$name)]
message_data$name
message_data$gender
message_data[message_data$gender == 1,]
length(message_data[message_data$gender == 1,])
length(message_data[message_data$gender == 0,])
message_data[,message_data$gender == 1]
message_data$gender == 1
message_data_ided <- message_data[!is.na(message_data$gender)]
message_data_ided <- message_data[!is.na(message_data$gender),]
View(message_data_ided)
message_data_men <- message_data_ided[message_data_ided$gender) == 1,]
message_data_men <- message_data_ided[message_data_ided$gender == 1,]
View(message_data_men)
size(message_data_men)
nrow(message_data_men)
message_data_women <- message_data_ided[message_data_ided$gender == 0,]
nrow(message_data_women)
source('~/.active-rstudio-document')
times <- load_times(con)
View(times)
source('~/Dropbox/TextMining/Setup.R')
View(times)
times <- load_times(con)
View(times)
sapply(times, function(data){ print(data$times)})
sapply(times, function(data){ print(data)})
sapply(times[,], function(data){ print(data)})
?apply
?by
apply(times,1,function(data){print(data)})
apply(times,1,function(data){print(data$times)})
apply(times,1,function(data){print(data[3])})
apply(times,1,function(data){print(data$times)})
apply(times,1,function(data){print(data[3])})
res <- apply(times,1,function(data){print(data[3])})
res <- apply(times,1,function(data){data[3]})
head(res)
View(res)
lapply(res, function(data){}
View(res));
res <- apply(times,1,function(data){
vals = strsplit(data[3], ",")
return vals})
res <- apply(times,1,function(data){
vals = strsplit(data[3], ",")
return(vals)})
con <- load_db()
source('~/Dropbox/TextMining/Setup.R')
View(median_response_times)
View(res)
times <- load_times(con)
res <- apply(times,1,function(data){data[3]})
median_response_times <- rep(0, 1)
for(r in res){
comps <- unlist(strsplit(r, ","))
print(length(comps))
diffs <- rep(0, 1)
i = 0
for(c in comps){
i = i + 1
if(i > 1){
diffs[length(diffs)+1] <- (as.integer(c) - as.integer(comps[i-1]))
}
}
print(diffs)
median_response_times[length(median_response_times) + 1] <- mean(diffs)
}
View(median_response_times)
View(diffs)
median_response_times <- rep(0, length(res))
count = 0
for(r in res){
count = count + 1
comps <- unlist(strsplit(r, ","))
print(length(comps))
diffs <- rep(0, length(comps) - 1)
i = 0
for(c in comps){
i = i + 1
if(i > 1){
diffs[i] <- (as.integer(c) - as.integer(comps[i-1]))
}
}
print(diffs)
median_response_times[count] <- mean(diffs)
}
View(median_response_times)
median_response_times <- rep(0, length(res))
count = 0
for(r in res){
count = count + 1
comps <- unlist(strsplit(r, ","))
print(length(comps))
diffs <- rep(0, length(comps) - 1)
i = 0
for(c in comps){
i = i + 1
if(i > 1){
diffs[i] <- (as.integer(c) - as.integer(comps[i-1]))
}
}
print(diffs)
median_response_times[count] <- median(diffs)
}
View(median_response_times)
median_response_times <- rep(0, length(res))
count = 0
for(r in res){
count = count + 1
comps <- unlist(strsplit(r, ","))
print(length(comps))
diffs <- rep(0, length(comps) - 1)
i = 0
for(c in comps){
i = i + 1
if(i > 1){
diffs[i] <- (as.integer(c) - as.integer(comps[i-1]))
}
}
print(diffs)
median_response_times[count] <- median(diffs)
}
times$median_response_time <- median_response_times
View(times)
source('~/Dropbox/TextMining/Setup.R')
times <- load_times(con)
res <- apply(times,1,function(data){data[3]})
median_response_times <- rep(0, length(res))
count = 0
for(r in res){
count = count + 1
comps <- unlist(strsplit(r, ","))
print(length(comps))
diffs <- rep(0, length(comps) - 1)
i = 0
for(c in comps){
i = i + 1
if(i > 1){
diffs[i] <- (as.integer(c) - as.integer(comps[i-1]))
}
}
median_response_times[count] <- median(diffs)
}
times$median_response_time <- median_response_times
View(times)
male_response_times <- times[times$gender == 1]$median_response_time
female_response_times <- times[times$gender == 0]$median_response_time
male_response_times <- times[times$gender == 1,]$median_response_time
female_response_times <- times[times$gender == 0,]$median_response_time
View(male_response_times)
View(female_response_times)
mean(male_response_times)
male_response_times <- times[times$gender == 1,]$median_response_time
male_response_times <- male_response_times[!is.na(male_respones_times$median_response_time)]
female_response_times <- times[times$gender == 0,]$median_response_time
female_response_times <- female_response_times[!is.na(female_respones_times$median_response_time)]
times <- load_times(con)
res <- apply(times,1,function(data){data[3]})
median_response_times <- rep(0, length(res))
count = 0
for(r in res){
count = count + 1
comps <- unlist(strsplit(r, ","))
print(length(comps))
diffs <- rep(0, length(comps) - 1)
i = 0
for(c in comps){
i = i + 1
if(i > 1){
diffs[i] <- (as.integer(c) - as.integer(comps[i-1]))
}
}
median_response_times[count] <- median(diffs)
}
times$median_response_time <- median_response_times
male_response_times <- times[times$gender == 1,]$median_response_time
male_response_times_clean <- male_response_times[!is.na(male_respones_times$median_response_time)]
female_response_times <- times[times$gender == 0,]$median_response_time
female_response_times_clean <- female_response_times[!is.na(female_respones_times$median_response_time)]
male_response_times <- times[times$gender == 1,]$median_response_time
male_response_times
male_response_times <- times[times$gender == 1,]$median_response_time
male_response_times_clean <- male_response_times[!is.na(male_response_times$median_response_time)]
female_response_times <- times[times$gender == 0,]$median_response_time
female_response_times_clean <- female_response_times[!is.na(female_response_times$median_response_time)]
View(female_response_times)
male_response_times <- times[times$gender == 1,]
male_response_times_clean <- male_response_times[!is.na(male_response_times$median_response_time)]
female_response_times <- times[times$gender == 0,]
female_response_times_clean <- female_response_times[!is.na(female_response_times$median_response_time)]
View(female_response_times)
View(female_response_times)
female_response_times$median_response_time
male_response_times <- times[times$gender == 1,]
male_response_times_clean <- male_response_times[!is.na(male_response_times$median_response_time)]
female_response_times <- times[times$gender == 0,]
female_response_times_clean <- female_response_times[!is.na(female_response_times$median_response_time)]
male_response_times <- times[times$gender == 1,]
male_response_times_clean <- male_response_times[!is.na(male_response_times$median_response_time),]
female_response_times <- times[times$gender == 0,]
female_response_times_clean <- female_response_times[!is.na(female_response_times$median_response_time),]
View(male_response_times_clean)
male_response_times <- times[times$gender == 1,]
male_response_times_clean <- male_response_times[!is.na(male_response_times$median_response_time),]$median_response_time
female_response_times <- times[times$gender == 0,]
female_response_times_clean <- female_response_times[!is.na(female_response_times$median_response_time),]$median_response_time
mean(male_response_times_clean)
mean(female_response_times_clean)
t.test(female_response_times_clean, male_response_times_clean)
t.test(male_response_times_clean, female_response_times_clean)
View(times)
times <- load_times(con)
res <- apply(times,1,function(data){data[3]})
median_response_times <- rep(0, length(res))
count = 0
for(r in res){
count = count + 1
comps <- unlist(strsplit(r, ","))
print(length(comps))
diffs <- rep(0, length(comps) - 1)
i = 0
for(c in comps){
i = i + 1
if(i > 1){
diffs[i] <- (as.integer(c) - as.integer(comps[i-1]))
}
}
median_response_times[count] <- mean(diffs)
}
times$median_response_time <- median_response_times
male_response_times <- times[times$gender == 1,]
male_response_times_clean <- male_response_times[!is.na(male_response_times$median_response_time),]$median_response_time
female_response_times <- times[times$gender == 0,]
female_response_times_clean <- female_response_times[!is.na(female_response_times$median_response_time),]$median_response_time
mean(female_response_times_clean)
mean(male_response_times_clean)
t.test(female_response_times_clean, male_response_times_clean)
?t.test
plot(male_response_times_clean)
hist(male_response_times_clean)
d <- density(male_response_times_clean)
plot(d)
male_d <- density(male_response_times_clean)
female_d <- density(female_response_times_clean)
plot(female_d)
male_d <- density(male_response_times_clean)
plot(female_d)
plotCmale_d
plotCmale_d)
plot(male_d)
plot(female_d)
source('~/.active-rstudio-document')
source('~/Dropbox/TextMining/Setup.R')
source('~/Dropbox/TextMining/Setup.R')
plot(female_d)
source('~/Dropbox/TextMining/Setup.R')
plot(female_d)
hist(leaders_count, breaks="FD", col=c('red'))
hist(leaders_count, breaks=20, col=c('red'))
hist(leaders_count, breaks=10, col=c('red'))
hist(leaders_count, breaks="FD", col=c('red'))
?sapply
pie_chart_for_text_balance_ratio(balance_data[46,])
pie_chart_for_text_balance_ratio(balance_data[47,])
pie_chart_for_text_balance_ratio(balance_data[48,])
pie_chart_for_text_balance_ratio(balance_data[49,])
pie_chart_for_text_balance_ratio(balance_data[50,])
pie_chart_for_text_balance_ratio(balance_data[37,])
mean(female_response_times_clean)
mean(male_response_times_clean)
t.test(female_response_times_clean, male_response_times_clean)
View(balance_data)
View(balance_data)
ls()
rm(list=ls())
source('~/Dropbox/TextMining/Setup.R')
source('~/Dropbox/TextMining/Setup.R')
source('~/Dropbox/TextMining/Setup.R')
source('~/Dropbox/TextMining/Setup.R')
rm(list=ls())
